{"version":3,"sources":["axios.js","components/Post/Post.js","containers/FullPost/FullPost.js","containers/Posts/Posts.js","containers/Blog/Blog.js","hoc/asyncComponent.js","App.js","registerServiceWorker.js","index.js"],"names":["instance","axios","create","baseURL","defaults","headers","common","post","props","react_default","a","createElement","className","onClick","clicked","title","author","FullPost","state","loadeddata","_this","data","id","match","params","get","then","res","setState","DeletePostHandler","delete","console","log","this","_this2","body","Component","withRouter","Posts","posts","selectedpostid","error","PostIdListener","history","push","catch","_this3","map","Object","objectSpread","slice","Post_Post","key","react_router","path","url","component","AsyncNewpost","importComponent","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","inherits","createClass","value","cmp","default","C","asyncComponent","__webpack_require__","e","bind","Blog","react_router_dom","to","exact","App","containers_Blog_Blog","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f66db6b4.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL:'https://jsonplaceholder.typicode.com/'\n})\n\ninstance.defaults.headers.common['Authendication']='AUTH TOKEN FROM INSTANCE'\n\nexport default instance","import React from 'react';\n\nimport './Post.css';\n//用withRouter包起來就能把Router裏的一些property跟方法傳給子組件\nconst post = (props) => (\n    <article className=\"Post\" onClick={props.clicked}>\n        <h1>{props.title}</h1>\n        <div className=\"Info\">\n            <div className=\"Author\">{props.author}</div>\n        </div>\n    </article>\n);\n\nexport default post;","import React, { Component } from 'react';\nimport {withRouter} from 'react-router-dom'\nimport './FullPost.css';\nimport axios from '../../axios'\n\nclass FullPost extends Component {\nstate={\n    loadeddata:null\n}   \n    loadeddata=()=>{\n    if(!this.state.loadeddata||this.state.loadeddata.data.id!= +this.props.match.params.id)\n    axios.get('posts/'+this.props.match.params.id)\n         .then(res=>this.setState({loadeddata:res})) \n    }\n    componentDidMount(){\n        this.loadeddata()\n    }\n    componentDidUpdate(){\n        this.loadeddata()\n    }\n    DeletePostHandler=()=>{\n        axios.delete('posts/'+this.props.match.params.id)\n             .then(res=>console.log(res))\n    }\n    render () {\n        let post = <p>Please select a Post!</p>;\n        if(this.props.match.params.id){\n            post = <p>Loading...</p>;\n            if(this.state.loadeddata)\n            {\n                \n                post = (\n                    <div className=\"FullPost\">\n                        <h1>{this.state.loadeddata.data.title}</h1>\n                        <p>{this.state.loadeddata.data.body}</p>\n                        <div className=\"Edit\">\n                            <button onClick={()=>this.DeletePostHandler()}className=\"Delete\">Delete</button>\n                        </div>\n                    </div>\n                )\n            } \n        }\n        return post;\n    }\n}\n\nexport default withRouter(FullPost);","import React,{Component} from 'react'\nimport axios from '../../axios'\nimport Post from '../../components/Post/Post'\nimport {Route} from 'react-router-dom'\nimport FullPost from '../FullPost/FullPost'\nimport './Posts.css'\nclass Posts extends Component{\n    state={\n        posts:[],\n        selectedpostid:null,\n        error:false\n    }\n    componentDidMount(){\n        axios.get('posts')\n             .then(res=>{this.setState({posts:res.data})})\n             .catch(error=>this.setState({error:true}))\n            }\n    PostIdListener=(id)=>{\n       this.props.history.push('/'+id)\n    }\n    render(){\n        let posts = <h4>Something went wrong!!!</h4>\n        if(!this.state.error)\n        {           \n            \n                    const updatedPosts = this.state.posts.map(\n                    post => {return {\n                    ...post,\n                    author:'Max'}})  //給每個元素新增一個property叫做author:'Max\n                    posts = updatedPosts\n                    .slice(0,4)\n                    .map(\n                    post=>(\n                    <Post \n                    key={post.id}\n                    clicked={()=>this.PostIdListener(post.id)}    \n                     //把PostIdListener傳到Post組件裏,並在Post組件裏assign他onClick事件,執行時要帶入參數post.id\n                    title={post.title}\n                    author={post.author}\n                    />\n                    ))\n                }\n                return(\n                 <div className='Posts'> \n                 {posts}   \n                 <Route path = {this.props.match.url + ':id'} component={FullPost}/>\n                 </div>          \n        )\n    }\n}\n\nexport default Posts","import React, { Component } from 'react';\nimport Posts from '../Posts/Posts'\nimport './Blog.css';\nimport {Route,NavLink,withRouter,Switch} from 'react-router-dom';//exact用來嚴格限制css style的套用\nimport asyncComponent from '../../hoc/asyncComponent'\n\nconst AsyncNewpost = asyncComponent(()=>{\n     return import('../NewPost/NewPost')\n    })\nclass Blog extends Component {\n    render () {\n            return (\n                <div>\n                    <header className='Posts'>\n                        <nav>\n                            <ul>\n                                <li>    \n                                    <NavLink to='/' exact>HOME</NavLink> \n                                    <NavLink to='/newpost'>NEW POST</NavLink>\n                                </li>\n                            </ul>\n                        </nav>\n                    </header>\n                    <section className=\"Posts\">\n                    <Switch>\n                    <Route path = '/newpost' component={AsyncNewpost}/>\n                    <Route path = '/' component={Posts}/>\n                    </Switch>\n                    </section>\n                </div>\n            )\n    }\n}\n\nexport default withRouter(Blog);","import React,{Component} from 'react'\nconst asyncComponent = (importComponent) =>{\n    return class extends Component{             //這個HOC將return一個附加功能性的組件,\n                                                //也就是說,傳入一個組件後,該組件將被賦予功能\n        state={\n            component:null\n        }\n        componentDidMount()\n        {\n         importComponent()                      //傳入的組件在這個生命週期執行then,cmp.resault是我們希望動態掛載的組件\n         .then(cmp=>this.setState({component:cmp.default}))   \n        }\n        render()\n        {let C = this.state.component\n           return(\n               C ? <C {...this.props}/> : null\n           )\n        }\n    }\n}\nexport default asyncComponent\n","import React, { Component } from 'react';\nimport {HashRouter} from 'react-router-dom'\nimport Blog from '../src/containers/Blog/Blog';\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n      <div className=\"App\">\n        <Blog />\n      </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport axios from 'axios';\n\naxios.defaults.baseURL='https://jsonplaceholder.typicode.com/'\n\nReactDOM.render( <App />, document.getElementById( 'root' ) );\nregisterServiceWorker();\n"],"sourceRoot":""}